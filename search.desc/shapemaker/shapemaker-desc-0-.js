searchState.loadedDescShard("shapemaker", 0, "Angle, stored in degrees\nReturns the argument unchanged.\nCreates an angle given an amount, and what a full turn is …\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nget SVG coordinates of the cell’s center instead of its …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCorners of the region’s outline Does <em>not</em> match …\nadds dx and dy to the end of the region (dx and dy are <em>not</em> …\nIterates all points except the ones specified in the <code>except</code>…\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\niterates from left to right then top to bottom (in a “…\nIterates all points outlining the region, in clockwise …\nresized is like enlarged, but transforms from the center, …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe layers are in order of top to bottom: the first layer …\nputs this layer on bottom, and the others above, without …\nputs this layer on top, and the others below, without …\nre-order layers. The first layer in the list will be on …\nreturns a list of all unique filters used throughout the …\nCreate a new canvas. The layers are in order of top to …\nAn iterator over the variants of Color\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDotted(color, diameter, spacing)\nHatches(color, angle, thickness_ratio, spacing)\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the effective region the layer occupies, by …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nStruct can be rendered as a CSS ruleset (e.g. no selectors)\nWhen merging multiple SVGAttributesRenderable, this string …\nStruct can be rendered as attributes of a SVG element\nStruct can be rendered as a SVG element\nSets cx and cy\nSets x and y\nSets width and height\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSets x and y\nSets x1, y1 and x2, y2\nSets x, y, width and height according to the region\nSets width and height\nmax amplitude of this stem\nin milliseconds\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nHow many instants (individual ms values) have occurred …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBuilt-in <code>Easing</code> implementations.\nArguments: animation progress (from 0.0 to 1.0), canvas, …\nAn easing function for customizing animations.\nAn animation that only manipulates a single layer. See …\nBuilt-in <code>Easing</code> implementations.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns a new easing function using <code>func</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns a new easing function using <code>easing</code>.\nExample\nAn <code>Easing</code> function that eases in using a curve that backs …\nAn <code>Easing</code> function that eases in using a curve that …\nAn <code>Easing</code> function that eases in using a curve resembling …\nAn <code>Easing</code> function that eases in using a cubic (x^3) curve\nAn <code>Easing</code> function that eases in using a curve that …\nAn <code>Easing</code> function that eases in using an expenential curve\nAn <code>Easing</code> function that eases in and out using a curve …\nAn <code>Easing</code> function that eases in and out using a curve …\nAn <code>Easing</code> function that eases in and out using a curve …\nAn <code>Easing</code> function that eases in and out using a cubic …\nAn <code>Easing</code> function that eases in and out using a curve …\nAn <code>Easing</code> function that eases in and out using an …\nAn <code>Easing</code> function that eases in and out using a quadradic …\nAn <code>Easing</code> function that eases in and out using a quartic …\nAn <code>Easing</code> function that eases in and out using a quintic …\nAn <code>Easing</code> function that eases in and out using a sine wave\nAn <code>Easing</code> function that eases in using a quadradic (x^2) …\nAn <code>Easing</code> function that eases in using a quartic (x^4) …\nAn <code>Easing</code> function that eases in using a quintic (x^5) …\nAn <code>Easing</code> function that eases in using a sine wave\nAn <code>Easing</code> function that eases out using a curve that backs …\nAn <code>Easing</code> function that eases out using a curve that …\nAn <code>Easing</code> function that eases out using a curve resembling …\nAn <code>Easing</code> function that eases out using a cubic (x^3) curve\nAn <code>Easing</code> function that eases out using a curve that …\nAn <code>Easing</code> function that eases out using an expenential …\nAn <code>Easing</code> function that eases out using a quadradic (x^2) …\nAn <code>Easing</code> function that eases out using a quartic (x^4) …\nAn <code>Easing</code> function that eases out using a quintic (x^5) …\nAn <code>Easing</code> function that eases out using a sine wave\nEases in using a curve that backs away initially\nEases in using a curve that bounces progressively closer …\nEases in using a curve resembling the top-left arc of a …\nEases in using a cubic (x^3) curve\nEases in using a curve that bounces around the start …\nEases in using an expenential curve\nEases in and out using a curve that backs away initially\nEases in and out using a curve that bounces progressively …\nEases in and out using a curve resembling the top-left arc …\nEases in and out using a cubic (x^3) curve\nEases in and out using a curve that bounces around the …\nEases in and out using an expenential curve\nEases in and out using a quadradic (x^2) curve\nEases in and out using a quartic (x^4) curve\nEases in and out using a quintic (x^5) curve\nEases in and out using a sine wave\nEases in using a quadradic (x^2) curve\nEases in using a quartic (x^4) curve\nEases in using a quintic (x^5) curve\nEases in using a sine wave\nAn <code>Easing</code> function that eases linearly\nEases linearly\nAn error returned from <code>StandardEasing::try_from</code> indicating …\nEases out using a curve that backs away initially\nEases out using a curve that bounces progressively closer …\nEases out using a curve resembling the top-left arc of a …\nEases out using a cubic (x^3) curve\nEases out using a curve that bounces around the start …\nEases out using an expenential curve\nEases out using a quadradic (x^2) curve\nEases out using a quartic (x^4) curve\nEases out using a quintic (x^5) curve\nEases out using a sine wave\nAn enumeration of all strandard easings provided.\nduration is in milliseconds Animates with ease-in-out …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nduration is in milliseconds\nAn <code>Easing</code> function that eases in using a curve that backs …\nAn <code>Easing</code> function that eases in using a curve that …\nAn <code>Easing</code> function that eases in using a curve resembling …\nAn <code>Easing</code> function that eases in using a cubic (x^3) curve\nAn <code>Easing</code> function that eases in using a curve that …\nAn <code>Easing</code> function that eases in using an expenential curve\nAn <code>Easing</code> function that eases in and out using a curve …\nAn <code>Easing</code> function that eases in and out using a curve …\nAn <code>Easing</code> function that eases in and out using a curve …\nAn <code>Easing</code> function that eases in and out using a cubic …\nAn <code>Easing</code> function that eases in and out using a curve …\nAn <code>Easing</code> function that eases in and out using an …\nAn <code>Easing</code> function that eases in and out using a quadradic …\nAn <code>Easing</code> function that eases in and out using a quartic …\nAn <code>Easing</code> function that eases in and out using a quintic …\nAn <code>Easing</code> function that eases in and out using a sine wave\nAn <code>Easing</code> function that eases in using a quadradic (x^2) …\nAn <code>Easing</code> function that eases in using a quartic (x^4) …\nAn <code>Easing</code> function that eases in using a quintic (x^5) …\nAn <code>Easing</code> function that eases in using a sine wave\nAn <code>Easing</code> function that eases out using a curve that backs …\nAn <code>Easing</code> function that eases out using a curve that …\nAn <code>Easing</code> function that eases out using a curve resembling …\nAn <code>Easing</code> function that eases out using a cubic (x^3) curve\nAn <code>Easing</code> function that eases out using a curve that …\nAn <code>Easing</code> function that eases out using an expenential …\nAn <code>Easing</code> function that eases out using a quadradic (x^2) …\nAn <code>Easing</code> function that eases out using a quartic (x^4) …\nAn <code>Easing</code> function that eases out using a quintic (x^5) …\nAn <code>Easing</code> function that eases out using a sine wave\nEases in using a curve that backs away initially\nEases in using a curve that bounces progressively closer …\nEases in using a curve resembling the top-left arc of a …\nEases in using a cubic (x^3) curve\nEases in using a curve that bounces around the start …\nEases in using an expenential curve\nEases in and out using a curve that backs away initially\nEases in and out using a curve that bounces progressively …\nEases in and out using a curve resembling the top-left arc …\nEases in and out using a cubic (x^3) curve\nEases in and out using a curve that bounces around the …\nEases in and out using an expenential curve\nEases in and out using a quadradic (x^2) curve\nEases in and out using a quartic (x^4) curve\nEases in and out using a quintic (x^5) curve\nEases in and out using a sine wave\nEases in using a quadradic (x^2) curve\nEases in using a quartic (x^4) curve\nEases in using a quintic (x^5) curve\nEases in using a sine wave\nAn <code>Easing</code> function that eases linearly\nEases linearly\nAn error returned from <code>StandardEasing::try_from</code> indicating …\nEases out using a curve that backs away initially\nEases out using a curve that bounces progressively closer …\nEases out using a curve resembling the top-left arc of a …\nEases out using a cubic (x^3) curve\nEases out using a curve that bounces around the start …\nEases out using an expenential curve\nEases out using a quadradic (x^2) curve\nEases out using a quartic (x^4) curve\nEases out using a quintic (x^5) curve\nEases out using a sine wave\nAn enumeration of all strandard easings provided.\nReturns a collection of every variant of this enum.\nEases in using a sine wave\nEases out using a sine wave\nEases in and out using a sine wave\nEases in using a quadradic (x^2) curve\nEases out using a quadradic (x^2) curve\nEases in and out using a quadradic (x^2) curve\nEases in using a cubic (x^3) curve\nEases out using a cubic (x^3) curve\nEases in and out using a cubic (x^3) curve\nEases in using a quartic (x^4) curve\nEases out using a quartic (x^4) curve\nEases in and out using a quartic (x^4) curve\nEases in using a quintic (x^5) curve\nEases out using a quintic (x^5) curve\nEases in and out using a quintic (x^5) curve\nEases in using an expenential curve\nEases out using an expenential curve\nEases in and out using an expenential curve\nEases in using a curve resembling the top-left arc of a …\nEases out using a curve resembling the top-left arc of a …\nEases in and out using a curve resembling the top-left arc …\nEases in using a curve that backs away initially\nEases out using a curve that backs away initially\nEases in and out using a curve that backs away initially\nEases in using a curve that bounces around the start …\nEases out using a curve that bounces around the start …\nEases in and out using a curve that bounces around the …\nEases in using a curve that bounces progressively closer …\nEases out using a curve that bounces progressively closer …\nEases in and out using a curve that bounces progressively …\nEases linearly\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nTells the rendering engine what to do with a frame\nWhat data is sent to the output by the rendering engine …\nRender this frame and stop rendering afterwards\nRender this frame as usual\nDon’t run hooks or anything on this frame\nDon’t render this frame and stop rendering\nSkip to the next frame, don’t render this one\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nArguments: canvas, context, previous rendered beat, …\nHooks that are triggered within a regular hook Used to …\nArguments: canvas, context, previous rendered beat\nArguments: canvas, context, current milliseconds timestamp\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nTriggers when a note starts on one of the stems in the …\nTriggers when a note stops on one of the stems in the …\nthreshold is a value between 0 and 1: current amplitude / …\nWhether the hook should be run only once\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nRender a single frame at the given frame number. Skip all …\nDuration of the video, without taking into account a …\nAdds the given scene and a hook that switches to it …\nAdds the given scene, and a hook that switches to it when …\nAdds hooks from the given scene to the video. Hooks will …\nThe VST3 plugin factory entry point.\nThe CLAP plugin’s entry point.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nAudio In signal name\nMaps automation parameter indices to their names\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMIDI In signal name\nReturns a new probe with the <code>added_at</code> field set to the …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nStore a data point.\nStore a audio data point.\nStore a automation data point.\nStore a midi data point.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.")